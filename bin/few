#!/usr/bin/env ruby
require 'pathname'
require 'tempfile'
require 'cgi'
require 'kconv'
require 'singleton'

def open_browser(url)
  case RUBY_PLATFORM.downcase
  when /linux/
    if ENV['KDE_FULL_SESSION'] == 'true'
      system 'kfmclient', 'exec', url
    elsif ENV['GNOME_DESKTOP_SESSION_ID']
      system 'gnome-open', url
    elsif system("exo-open -v >& /dev/null")
      system 'exo-open', url
    else
      system 'firefox', url
    end
  when /darwin/
    system 'open', url
  when /mswin(?!ce)|mingw|bccwin/
    system 'start', url
  else
    system 'firefox', url
  end
end

def require_monad(*libraries)
  libraries.all? {|l|
    l = l.to_s
    begin
      if File.basename(l).include? '.'
        load l
      else
        require l
      end
    rescue LoadError
    end
  }
end

require_monad :rubygems, :markdown


class Few
  class Config
    def initialize(i={})
      @c = i
    end
    def method_missing(n,*a)
      case n.to_s
      when /=$/
        @c[n.to_s.gsub(/=$/,'').to_sym]=a[0]
      else
        @c[n]
      end
    end
  end

  def initialize(o)
    @opt = {:filetype => :text, :tee => false}.merge(o)
    @config = Config.new(:remote => false, :private_key => fewdir('key'), :public_key => fewdir('key.pub'))
  end

  def load_config
    config_files = ['_fewrc','.fewrc','.few.conf','few.conf','.fewrc.rb','_fewrc.rb','fewrc.rb']
    config_files.delete_if{|x| !File.exist?(File.expand_path("~") + '/' + x)}
    if config_files.length > 0
      config_file = config_files[0]
      eval File.load(config_file)
    end
  end

  def fewdir(path)
    dirs = ['few','fewfiles']
    dirs.delete_if{|x| !File.exist?(File.expand_path("~") + '/' + x)}
    if dirs.length > 0
      dir = config_files[0]
      dir+'/'+path
    else; nil
    end
  end

  def run
    t = Tempfile.new('few')

    File.open(t.path, 'w') do |io|
      if @opt[:tee]
        b = ''
        ARGF.each do |l|
          print l
          b += l
        end
        a = CGI.escapeHTML b
      else
        a = CGI.escapeHTML ARGF.read.toutf8
      end
      a = a.gsub(/\r?\n/, "<br />\n")

      a = a.gsub(/.\x08/, '')
      a = a.gsub(/\x1b\[([0-9]*)m/) do
        case $1
        when "","39"
        '</font>'
        when "30"
        '<font color="black">'
        when "31"
        '<font color="red">'
        when "32"
        '<font color="green">'
        when "33"
        '<font color="yellow">'
        when "34"
        '<font color="blue">'
        when "35"
        '<font color="magenta">'
        when "36"
        '<font color="cyan">'
        when "37"
        '<font color="white">'
        else
        ''
        end
      end

      io.puts <<-EOF
<html>
  <head>
    <title>few: #{ARGF.filename} (#{@opt[:filetype].to_s})</title>
    <style type="text/css">
        body {
          white-space: pre;
          line-height: 7px;
          font-size: 12pt;
          font-family: "menlo regular", "monaco", "courier", monospace;
        }
    </style>
  </head>
  <body>
      #{a}
  </body>
</html>
    EOF
    end

    t.close

    File.rename(t.path, html = t.path + '.html')

    open_browser(html)

  end
  attr_reader :config
end

def few(o={})
  Few.new(o).run
end

case ARGV[0]
when '-h', '--help'
  puts "[USAGE]: few [-h|--help|-v|--version|--selfupdate|--filetype=([a-zA-Z0-9]+)|-t|-T|--tee] [filename]"
  puts "[EXAMPLES]: few {filename}"
  puts "            cat {filename} | few"
  puts "            make |& few --tee"
when '-v', '--version'
  puts "0.0.2"
when '--selfupdate'
  require 'open-uri'
  code = open('http://github.com/ujihisa/few/raw/master/bin/few') {|io| io.read }
  raise unless /^#!/ =~ code
  File.open(__FILE__, 'w') {|io| io.print code }
  system __FILE__, '-v'
when /--filetype=([a-zA-Z0-9]+)/
  ARGV.shift
  few(:filetype => $1.to_sym)
when '--tee', '-t', '-T'
  ARGV.shift
  few(:tee => true, :filetype => :tee)
else
  few
end
# vim: set filetype=ruby : set tabstop=2 : set shiftwidth=2
