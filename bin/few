#!/usr/bin/env ruby
require 'pathname'
require 'tempfile'
require 'cgi'
require 'kconv'
require 'singleton'
require 'base64'

self_file =
  if File.symlink?(__FILE__)
    require 'pathname'
    Pathname.new(__FILE__).realpath
  else
    __FILE__
  end
$:.unshift(File.dirname(self_file) + "/../lib")

require 'few'
include Few::Util

require_monad :rubygems, :markdown

case ARGV[0]
when '-h', '--help'
  puts "[USAGE]: few [-h|--help|-v|--version|--selfupdate|--filetype={filetype}|-t|-T|--tee|--server] [filename]"
  puts "[EXAMPLES]: few {filename}"
  puts "            cat {filename} | few"
  puts "            make |& few --tee"
when '-v', '--version'
  puts "0.0.2"
when '--selfupdate'
  require 'open-uri'
  code =
    open('http://github.com/ujihisa/few/raw/master/bin/few') {|io| io.read }
  raise unless /^#!/ =~ code
  File.open(__FILE__, 'w') {|io| io.print code }
  system __FILE__, '-v'
when /--filetype=(\w+)/
  ARGV.shift
  Few(:filetype => $1.to_sym)
when '--tee', '-t', '-T'
  ARGV.shift
  Few(:tee => true, :filetype => :tee)
when '--remote-standing', '-r', '--server'
  Few.new(:remote_standing => true).start
when '--remote-daemon', '-d'
  Few.new(:remote_standing => true).start(true)
when '--gen-keys', '--generate-keys', '--generate-key-pair'
  print 'Generating new key pair for remote... '
  f = Few.new.generate_remote_key_pair
  puts 'done.'
  puts "Send #{f.fewdir(f.config.public_key)} to remote host ~/.few ~/fewfiles, and write `config.remote = true` to remote ~/.fewrc ."
  puts 'To standby to recieve, start few with `-r` or `-d` (-r with daemon) option.'
else
  Few()
end
# vim: set filetype=ruby : set tabstop=2 : set shiftwidth=2
